name: Python

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  Black_flake8_mypy:
    runs-on: ubuntu-latest
    env:
      ENV: docker
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install -r backend/requirements_dev.txt
    - name: Run black
      run:
        black --check backend/src/ --line-length 99
    - name: Run flake8
      run: flake8 backend/src --config backend/tox.ini
    - name: Run Mypy
      run: |
        cd backend
        mypy src --config-file setup.cfg --no-incremental
  TestingDB:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # run steps required in the workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install -r requirements_dev.txt

      - name: migrate database
        run: |
          cd backend
          python manage.py migrate
        env:
          ENV: TEST

      - name: Run the mock tests function
        run: |
          cd backend
          python manage.py test
        env:
          ENV: TEST
  ESLint_Prettier:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node_version: 14

      - name: Install modules
        run: npm install

      - name: ESLint
        run: ng lint

      - name: Prettier
        run: npx prettier -c
